@page
@model PROG7312_Part2.Pages.ReportIssuesModel
@{
    ViewData["Title"] = "Report Issues";
}

<div class="container-fluid">
    <h1 class="text-center">Report an Issue</h1>
    <div class="card mb-4" style="width: 100%; height: auto">
        <div class="card-body">

            <div class="progress mb-3">
                <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
            </div>

            <form method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label asp-for="report.Location">Location</label>
                    <input type="text" class="form-control" asp-for="report.Location" required />
                </div>
                <div class="form-group">
                    <label asp-for="report.Category">Category</label>
                    <select class="form-control" asp-for="report.Category" required>
                        <option value="">Select Category</option>
                        <option value="Roads">Roads</option>
                        <option value="Water">Water</option>
                        <option value="Power">Power</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="report.Description">Description</label>
                    <textarea class="form-control" asp-for="report.Description" required></textarea>
                </div>
                <div class="form-group">
                    <label asp-for="UploadedFile">Attach Media</label>
                    <input type="file" class="form-control-file" asp-for="UploadedFile" />
                </div>
                <button type="submit" class="btn btn-primary">Submit Report</button>
                <a asp-page="./ViewReports" class="btn btn-secondary">View All Reports</a>
            </form>
        </div>
    </div>
</div>

<script>
    const locationInput = document.getElementById('report_Location');
    const categoryInput = document.getElementById('report_Category');
    const descriptionInput = document.getElementById('report_Description');
    const progressBar = document.getElementById('progressBar');

    // Function to update progress bar
    function updateProgress() {
        let progress = 0;
        if (locationInput.value.trim() !== "") progress += 33; // 33% for location
        if (categoryInput.value !== "") progress += 33; // 33% for category
        if (descriptionInput.value.trim() !== "") progress += 34; // 34% for description

        // Update progress bar width and text
        progressBar.style.width = progress + '%';
        progressBar.setAttribute('aria-valuenow', progress);
        progressBar.innerText = progress + '%';
    }

    // Add event listeners to inputs
    locationInput.addEventListener('input', updateProgress);
    categoryInput.addEventListener('change', updateProgress);
    descriptionInput.addEventListener('input', updateProgress);
</script>
